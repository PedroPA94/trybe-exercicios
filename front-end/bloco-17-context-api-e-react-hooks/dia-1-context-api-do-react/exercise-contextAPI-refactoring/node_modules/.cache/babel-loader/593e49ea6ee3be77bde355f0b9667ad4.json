{"ast":null,"code":"import { REFRESH_SUBREDDIT, RECEIVE_POSTS_FAILURE, RECEIVE_POSTS_SUCCESS, REQUEST_POSTS } from '../actions';\nconst INITIAL_POSTS_STATE = {\n  shouldRefreshSubreddit: false,\n  isFetching: false\n};\nconst INITIAL_POSTS_BY_SUBREDDIT_STATE = {\n  frontend: { ...INITIAL_POSTS_STATE\n  },\n  reactjs: { ...INITIAL_POSTS_STATE\n  }\n};\n\nconst posts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_POSTS_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REFRESH_SUBREDDIT:\n      return { ...state,\n        shouldRefreshSubreddit: true\n      };\n\n    case REQUEST_POSTS:\n      return { ...state,\n        shouldRefreshSubreddit: false,\n        isFetching: true\n      };\n\n    case RECEIVE_POSTS_SUCCESS:\n      return { ...state,\n        shouldRefreshSubreddit: false,\n        items: action.posts,\n        isFetching: false,\n        lastUpdated: action.receivedAt\n      };\n\n    case RECEIVE_POSTS_FAILURE:\n      return { ...state,\n        shouldRefreshSubreddit: false,\n        error: action.error,\n        items: [],\n        isFetching: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst postsBySubreddit = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_POSTS_BY_SUBREDDIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REFRESH_SUBREDDIT:\n    case RECEIVE_POSTS_SUCCESS:\n    case RECEIVE_POSTS_FAILURE:\n    case REQUEST_POSTS:\n      return { ...state,\n        [action.subreddit]: posts(state[action.subreddit], action)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postsBySubreddit;","map":{"version":3,"names":["REFRESH_SUBREDDIT","RECEIVE_POSTS_FAILURE","RECEIVE_POSTS_SUCCESS","REQUEST_POSTS","INITIAL_POSTS_STATE","shouldRefreshSubreddit","isFetching","INITIAL_POSTS_BY_SUBREDDIT_STATE","frontend","reactjs","posts","state","action","type","items","lastUpdated","receivedAt","error","postsBySubreddit","subreddit"],"sources":["/home/pedro/Trybe/trybe-exercicios/front-end/bloco-17-context-api-e-react-hooks/dia-1-context-api-do-react/exercise-contextAPI-refactoring/src/reducers/postsBySubreddit.js"],"sourcesContent":["import {\n  REFRESH_SUBREDDIT,\n  RECEIVE_POSTS_FAILURE,\n  RECEIVE_POSTS_SUCCESS,\n  REQUEST_POSTS,\n} from '../actions';\n\nconst INITIAL_POSTS_STATE = {\n  shouldRefreshSubreddit: false,\n  isFetching: false,\n};\n\nconst INITIAL_POSTS_BY_SUBREDDIT_STATE = {\n  frontend: { ...INITIAL_POSTS_STATE },\n  reactjs: { ...INITIAL_POSTS_STATE },\n};\n\nconst posts = (state = INITIAL_POSTS_STATE, action) => {\n  switch (action.type) {\n    case REFRESH_SUBREDDIT:\n      return {\n        ...state,\n        shouldRefreshSubreddit: true,\n      };\n    case REQUEST_POSTS:\n      return {\n        ...state,\n        shouldRefreshSubreddit: false,\n        isFetching: true,\n      };\n    case RECEIVE_POSTS_SUCCESS:\n      return {\n        ...state,\n        shouldRefreshSubreddit: false,\n        items: action.posts,\n        isFetching: false,\n        lastUpdated: action.receivedAt,\n      };\n    case RECEIVE_POSTS_FAILURE:\n      return {\n        ...state,\n        shouldRefreshSubreddit: false,\n        error: action.error,\n        items: [],\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst postsBySubreddit = (state = INITIAL_POSTS_BY_SUBREDDIT_STATE, action) => {\n  switch (action.type) {\n    case REFRESH_SUBREDDIT:\n    case RECEIVE_POSTS_SUCCESS:\n    case RECEIVE_POSTS_FAILURE:\n    case REQUEST_POSTS:\n      return {\n        ...state,\n        [action.subreddit]: posts(state[action.subreddit], action),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postsBySubreddit;"],"mappings":"AAAA,SACEA,iBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,aAJF,QAKO,YALP;AAOA,MAAMC,mBAAmB,GAAG;EAC1BC,sBAAsB,EAAE,KADE;EAE1BC,UAAU,EAAE;AAFc,CAA5B;AAKA,MAAMC,gCAAgC,GAAG;EACvCC,QAAQ,EAAE,EAAE,GAAGJ;EAAL,CAD6B;EAEvCK,OAAO,EAAE,EAAE,GAAGL;EAAL;AAF8B,CAAzC;;AAKA,MAAMM,KAAK,GAAG,YAAyC;EAAA,IAAxCC,KAAwC,uEAAhCP,mBAAgC;EAAA,IAAXQ,MAAW;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKb,iBAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELN,sBAAsB,EAAE;MAFnB,CAAP;;IAIF,KAAKF,aAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELN,sBAAsB,EAAE,KAFnB;QAGLC,UAAU,EAAE;MAHP,CAAP;;IAKF,KAAKJ,qBAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELN,sBAAsB,EAAE,KAFnB;QAGLS,KAAK,EAAEF,MAAM,CAACF,KAHT;QAILJ,UAAU,EAAE,KAJP;QAKLS,WAAW,EAAEH,MAAM,CAACI;MALf,CAAP;;IAOF,KAAKf,qBAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELN,sBAAsB,EAAE,KAFnB;QAGLY,KAAK,EAAEL,MAAM,CAACK,KAHT;QAILH,KAAK,EAAE,EAJF;QAKLR,UAAU,EAAE;MALP,CAAP;;IAOF;MACE,OAAOK,KAAP;EA7BJ;AA+BD,CAhCD;;AAkCA,MAAMO,gBAAgB,GAAG,YAAsD;EAAA,IAArDP,KAAqD,uEAA7CJ,gCAA6C;EAAA,IAAXK,MAAW;;EAC7E,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKb,iBAAL;IACA,KAAKE,qBAAL;IACA,KAAKD,qBAAL;IACA,KAAKE,aAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAEL,CAACC,MAAM,CAACO,SAAR,GAAoBT,KAAK,CAACC,KAAK,CAACC,MAAM,CAACO,SAAR,CAAN,EAA0BP,MAA1B;MAFpB,CAAP;;IAIF;MACE,OAAOD,KAAP;EAVJ;AAYD,CAbD;;AAeA,eAAeO,gBAAf"},"metadata":{},"sourceType":"module"}